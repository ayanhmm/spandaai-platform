services:
    # Spark
  spark:
    platform: linux/x86_64
    image: alexmerced/spark35nb:latest
    ports: 
      # - 8080:8080  # Master Web UI
      - ${SPARK_MASTER_EXTERNAL_PORT}:7077  # Master Port
      - ${SPARK_JUPYTER_NOTEBOOK_EXTERNAL_PORT}:8888  # Notebook
    environment:
      - AWS_REGION=${MINIO_REGION_NAME}
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER} #minio username
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD} #minio password
    container_name: spark
    networks:
      - Spanda-Net
    volumes:
      - ./:/workspace/user_data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    networks:
      - Spanda-Net
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_KAFKA_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_KAFKA_TICK_TIME}
    ports:
      - "${ZOOKEEPER_KAFKA_CLIENT_EXTERNAL_PORT}:2181"


  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_CLIENT_EXTERNAL_PORT}:9092"
    container_name: kafka
    networks:
      - Spanda-Net
    volumes:
      - ./:/user_data
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      # Defines the interface and port Kafka listens on
      # Replication factor for the offsets topic
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
      - "${NIFI_EXTERNAL_PORT_HTTP}:8080"  
      - "${NIFI_EXTERNAL_PORT_HTTPS}:8443"  


    environment:
      - NIFI_WEB_HTTP_PORT=${NIFI_WEB_HTTP_PORT}
      - SINGLE_USER_CREDENTIALS_USERNAME=${NIFI_SINGLE_USER_CREDENTIALS_USERNAME} 
      - SINGLE_USER_CREDENTIALS_PASSWORD=${NIFI_SINGLE_USER_CREDENTIALS_PASSWORD}
    volumes:
      - ./:/user_data
      - ./nifi-instance-data/conf:/opt/nifi/nifi-current/conf
      - ./nifi-instance-data/database_repository:/opt/nifi/nifi-current/database_repository
      - ./nifi-instance-data/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi-instance-data/content_repository:/opt/nifi/nifi-current/content_repository
      - ./nifi-instance-data/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ./nifi-instance-data/state:/opt/nifi/nifi-current/state
    networks:
      - Spanda-Net
  
networks:
  Spanda-Net:
    external: true
    name: Spanda-Net
    driver: bridge
    



