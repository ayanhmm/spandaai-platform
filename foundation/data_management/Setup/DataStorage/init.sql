-- Create database if not exists
CREATE DATABASE IF NOT EXISTS instructor_eval;
USE instructor_eval;

-- Create courses table first (referenced by other tables)
CREATE TABLE IF NOT EXISTS courses (
    CourseId VARCHAR(50) PRIMARY KEY,
    CourseTitle VARCHAR(255) NOT NULL,
    InstructorName VARCHAR(255) NOT NULL,
    Lectures TEXT DEFAULT NULL -- Store lecture numbers as JSON array in text format
);

-- Create evaluations table
CREATE TABLE IF NOT EXISTS evaluations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    course_id VARCHAR(255) NOT NULL,
    lecture_no INT NOT NULL,
    response TEXT NOT NULL,
    total_score FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(course_id, lecture_no)
);

-- Create criteria_scores table with all columns included
CREATE TABLE IF NOT EXISTS criteria_scores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    evaluation_id INT NOT NULL,
    criterion VARCHAR(255) NOT NULL,
    score FLOAT NOT NULL,
    max_score FLOAT NOT NULL DEFAULT 5,
    feedback TEXT NOT NULL,
    slide_images LONGTEXT DEFAULT NULL,  -- Store slide images as JSON (base64 encoded)
    slide_numbers TEXT DEFAULT NULL,     -- Store slide numbers as JSON array
    time_range VARCHAR(255) DEFAULT NULL, -- Store time range for this slide group
    slide_content TEXT DEFAULT NULL,     -- Store slide content text
    FOREIGN KEY (evaluation_id) REFERENCES evaluations(id) ON DELETE CASCADE
);

-- Create user_feedback table
CREATE TABLE IF NOT EXISTS user_feedback (
    id INT AUTO_INCREMENT PRIMARY KEY,
    course_id VARCHAR(255) NOT NULL,
    lecture_no INT NOT NULL,
    feedback TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (course_id) REFERENCES courses(CourseId),
    UNIQUE(course_id, lecture_no)
);

-- Create evaluation_jobs table for tracking async jobs
CREATE TABLE IF NOT EXISTS evaluation_jobs (
    job_id VARCHAR(50) PRIMARY KEY,
    course_id VARCHAR(50) NOT NULL,
    start_lecture INT NOT NULL,
    end_lecture INT NOT NULL,
    current_lecture INT NOT NULL,
    status ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    error_message TEXT,
    rubric_data LONGTEXT,
    FOREIGN KEY (course_id) REFERENCES courses(CourseId)
);

-- Insert sample course data
INSERT INTO courses (CourseId, CourseTitle, InstructorName) VALUES
('MBA ZG531', 'STATISTICAL QUALITY CONTROL', 'SUDEEP KR PRADHAN'),
('MM ZG621', 'SUPPLY CHAIN MANAGEMENT', 'SUDEEP KR PRADHAN'),
('MTCU ZC434', 'QUALITY CNTL ASSU & RELIABILI', 'SUDEEP KR PRADHAN'),
('PEAM ZC434', 'QUALITY CONTROL ASSUR & RELIAB', 'SUDEEP KR PRADHAN'),
('POM ZG621', 'SUPPLY CHAIN MANAGEMENT', 'SUDEEP KR PRADHAN'),
('QM ZG531', 'STATISTICAL QUALITY CONTROL', 'SUDEEP KR PRADHAN'),
('QM ZG621', 'SUPPLY CHAIN MANAGEMENT', 'SUDEEP KR PRADHAN'),
('DE ZG663', 'CONCURRENT ENGINEERING', 'SAMATA SATISH MUJUMDAR'),
('ET ZC323', 'MECHATRONICS & AUTOMATION', 'SAMATA SATISH MUJUMDAR'),
('QM ZG663', 'CONCURRENT ENGINEERING', 'SAMATA SATISH MUJUMDAR'),
('DSECL ZG565', 'MACHINE LEARNING', 'SWARN CHAUDHARY'),
('PCAM ZC311', 'CLASSIFICATION', 'SWARN CHAUDHARY'),
('SSWT ZC425', 'DATA MINING', 'SWARN CHAUDHARY'),
('EEE ZG573', 'DIGITAL SIGNAL PROCESSING', 'KRANTHI KUMAR PALAVALASA'),
('ES ZG573', 'DIGITAL SIGNAL PROCESSING', 'KRANTHI KUMAR PALAVALASA'),
('ES ZG613', 'ADV DIGITAL SIGNAL PROCESSING', 'KRANTHI KUMAR PALAVALASA'),
('MEL ZG512', 'OPTOELEC DEVICE CIRCUITS & SYS', 'KRANTHI KUMAR PALAVALASA'),
('MEL ZG573', 'DIGITAL SIGNAL PROCESSING', 'KRANTHI KUMAR PALAVALASA'),
('MEL ZG613', 'ADV DIGITAL SIGNAL PROCESSING', 'KRANTHI KUMAR PALAVALASA'),
('CSI ZG582', 'TELECOM NETWORK MANAGEMENT', 'SUPARNA CHAKRABORTY'),
('CSIW ZC263', 'DIGITAL ELECT & MICROPROCESSOR', 'SUPARNA CHAKRABORTY'),
('EEE ZG571', 'OPTICAL COMMUNICATION', 'SUPARNA CHAKRABORTY'),
('ES ZG571', 'OPTICAL COMMUNICATION', 'SUPARNA CHAKRABORTY'),
('BA ZC423', 'RETAIL ANALYTICS', 'GAURAV NAGPAL'),
('BA ZC424', 'SUPPLY CHAIN ANALYTICS', 'GAURAV NAGPAL'),
('MBA ZC417', 'QUANTITATIVE METHODS', 'GAURAV NAGPAL'),
('MBA ZG565', 'SUPPLY CHAIN ANALYTICS', 'GAURAV NAGPAL'),
('MBA ZG567', 'ANALYTICS FOR RETAIL INDUSTRY', 'GAURAV NAGPAL'),
('PDBA ZC417', 'QUANTITATIVE METHODS', 'GAURAV NAGPAL'),
('PDBA ZG565', 'SUPPLY CHAIN ANALYTICS', 'GAURAV NAGPAL'),
('PDBA ZG567', 'ANALYTICS FOR RETAIL INDUSTRY', 'GAURAV NAGPAL'),
('PDFT ZC417', 'QUANTITATIVE METHODS', 'GAURAV NAGPAL'),
('BA ZC420', 'DATA VISUALIZATION', 'ARINDAM ROY'),
('BA ZG512', 'PREDICTIVE ANALYTICS', 'ARINDAM ROY'),
('MBA ZG512', 'PREDICTIVE ANALYTICS', 'ARINDAM ROY'),
('MBA ZG536', 'FOUNDATIONS OF DATA SCIENCE', 'ARINDAM ROY'),
('MBA ZG539', 'DATA VISUALIZATION & COMM', 'ARINDAM ROY'),
('PDBA ZG512', 'PREDICTIVE ANALYTICS', 'ARINDAM ROY'),
('PDBA ZG536', 'FOUNDATIONS OF DATA SCIENCE', 'ARINDAM ROY'),
('PDBA ZG539', 'DATA VISUALIZATION & COMM', 'ARINDAM ROY'),
('TEST Z111', 'TEST COURSE', 'INSTRUCTOR');